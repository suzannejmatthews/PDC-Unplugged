<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>food on PDC Unplugged</title>
    <link>https://www.pdcunplugged.org/medium/food/</link>
    <description>Recent content in food on PDC Unplugged</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 07 Nov 2019 11:07:01 -0500</lastBuildDate><atom:link href="https://www.pdcunplugged.org/medium/food/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SweetenJuice</title>
      <link>https://www.pdcunplugged.org/activities/sweetenjuice/</link>
      <pubDate>Thu, 07 Nov 2019 11:07:01 -0500</pubDate>
      
      <guid>https://www.pdcunplugged.org/activities/sweetenjuice/</guid>
      <description>Original Author/link Originally described by Mordechai Ben-Ari and Yifat Ben-David Kolikant (Ben-Ari1999)
No web-link to independent description available. See paper (Ben-Ari1999) for additional details.
 Details The paper uses dramatizations to help students understand algorithmic execution. The paper only describes one such lesson, which is used to introduce the concept of mutual exclusion. The following is a rough summary of the exercise in (Ben-Ari1999):
Two students volunteer to be robots. A drinking glass is placed at a visible point in the classroom, purporting to contain &amp;ldquo;juice&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>PBJinParallel</title>
      <link>https://www.pdcunplugged.org/activities/pbjinparallel/</link>
      <pubDate>Fri, 01 Nov 2019 16:19:09 -0400</pubDate>
      
      <guid>https://www.pdcunplugged.org/activities/pbjinparallel/</guid>
      <description>Original Author/link Note: The &amp;ldquo;Make a Peanut Butter and Jelly Sandwich&amp;rdquo; serial exercise is an extremely old way to describe how a computer executes a set of instructions. The earliest known description is the &amp;ldquo;Great Peanut Butter Caper&amp;rdquo; by Lewandowski and Morehead in 1998. A variation was presented by Davis and Rebelsky in 2007. Unlike the original described exercises, this activity explores how to put together a Peanut Butter and Jelly sandwich in parallel</description>
    </item>
    
    <item>
      <title>CandySorting</title>
      <link>https://www.pdcunplugged.org/activities/candysorting/</link>
      <pubDate>Fri, 01 Nov 2019 14:23:28 -0400</pubDate>
      
      <guid>https://www.pdcunplugged.org/activities/candysorting/</guid>
      <description>Original Author/link iPDC Modules
 Available in Word and PDF   CS2013 Knowledge Unit Coverage Parallel Decomposition (Core Tier 1, Core Tier 2) 1. Core Tier 1: Explain why synchronization is necessary in a specific parallel program. [Usage]
2. Core Tier 1: Identify opportunities to partition a serial program into independent parallel modules. [Familiarity]
4. Core Tier 2: Parallelize an algorithm by applying task-based decomposition. [Usage]
Parallel Performance (Elective) 1.</description>
    </item>
    
    <item>
      <title>OrangeGame</title>
      <link>https://www.pdcunplugged.org/activities/orangegame/</link>
      <pubDate>Fri, 01 Nov 2019 10:59:45 -0400</pubDate>
      
      <guid>https://www.pdcunplugged.org/activities/orangegame/</guid>
      <description>Original Author/link CSUnplugged.Org
CS2013 Knowledge Unit Coverage PD/Communication and Coordination Core Tier 2 Give an example of a scenario in which blocking message sends can deadlock. [Usage]  TCPP Coverage Programming Topics  Comprehend Deadlocks: Understand what a deadlock is, and methods for detecting and preventing them  Recommended Courses  K-12: CSUnplugged recommends this as a K-12 activity Systems/OS: The activity can also be used to introduce the concepts of concurrency and deadlock in undergraduate courses.</description>
    </item>
    
  </channel>
</rss>
