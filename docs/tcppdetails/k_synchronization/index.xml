<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>K_Synchronization on PDC Unplugged</title>
    <link>https://www.pdcunplugged.org/tcppdetails/k_synchronization/</link>
    <description>Recent content in K_Synchronization on PDC Unplugged</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Jan 2020 15:20:31 -0500</lastBuildDate>
    
	<atom:link href="https://www.pdcunplugged.org/tcppdetails/k_synchronization/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SurvivorAnalogy</title>
      <link>https://www.pdcunplugged.org/activities/survivoranalogy/</link>
      <pubDate>Wed, 08 Jan 2020 15:20:31 -0500</pubDate>
      
      <guid>https://www.pdcunplugged.org/activities/survivoranalogy/</guid>
      <description>Original Author/link Originally described by Steve Bogaerts (Bogaerts2014).
No link to independent description publicly available. See &amp;ldquo;Details&amp;rdquo; section for more details:
 Details This analogy is used to explain the mechanism of locks. While (Bogaerts2014) specifically references the book The Lord of the Flies, not everyone may be familiar with that book (and some who are may not want to be reminded of it). Instead, it may be useful to explain the following general scenario:</description>
    </item>
    
    <item>
      <title>SweetenJuice</title>
      <link>https://www.pdcunplugged.org/activities/sweetenjuice/</link>
      <pubDate>Thu, 07 Nov 2019 11:07:01 -0500</pubDate>
      
      <guid>https://www.pdcunplugged.org/activities/sweetenjuice/</guid>
      <description>Original Author/link Originally described by Mordechai Ben-Ari and Yifat Ben-David Kolikant (Ben-Ari1999)
No web-link to independent description available. See paper (Ben-Ari1999) for additional details.
 Details The paper uses dramatizations to help students understand algorithmic execution. The paper only describes one such lesson, which is used to introduce the concept of mutual exclusion. The following is a rough summary of the exercise in (Ben-Ari1999):
Two students volunteer to be robots. A drinking glass is placed at a visible point in the classroom, purporting to contain &amp;ldquo;juice&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>PBJinParallel</title>
      <link>https://www.pdcunplugged.org/activities/pbjinparallel/</link>
      <pubDate>Fri, 01 Nov 2019 16:19:09 -0400</pubDate>
      
      <guid>https://www.pdcunplugged.org/activities/pbjinparallel/</guid>
      <description>Original Author/link Note: The &amp;ldquo;Make a Peanut Butter and Jelly Sandwich&amp;rdquo; serial exercise is an extremely old way to describe how a computer executes a set of instructions. The earliest known description is the &amp;ldquo;Great Peanut Butter Caper&amp;rdquo; by Lewandowski and Morehead in 1998. A variation was presented by Davis and Rebelsky in 2007. Unlike the original described exercises, this activity explores how to put together a Peanut Butter and Jelly sandwich in parallel</description>
    </item>
    
  </channel>
</rss>