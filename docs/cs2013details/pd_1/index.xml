<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PD_1 on PDC Unplugged</title>
    <link>https://www.pdcunplugged.org/cs2013details/pd_1/</link>
    <description>Recent content in PD_1 on PDC Unplugged</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Jan 2020 15:20:31 -0500</lastBuildDate>
    
	<atom:link href="https://www.pdcunplugged.org/cs2013details/pd_1/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SurvivorAnalogy</title>
      <link>https://www.pdcunplugged.org/activities/survivoranalogy/</link>
      <pubDate>Wed, 08 Jan 2020 15:20:31 -0500</pubDate>
      
      <guid>https://www.pdcunplugged.org/activities/survivoranalogy/</guid>
      <description>Original Author/link Originally described by Steve Bogaerts (Bogaerts2014).
No link to independent description publicly available. See &amp;ldquo;Details&amp;rdquo; section for more details:
 Details This analogy is used to explain the mechanism of locks. While (Bogaerts2014) specifically references the book The Lord of the Flies, not everyone may be familiar with that book (and some who are may not want to be reminded of it). Instead, it may be useful to explain the following general scenario:</description>
    </item>
    
    <item>
      <title>PlantingTrees</title>
      <link>https://www.pdcunplugged.org/activities/plantingtrees/</link>
      <pubDate>Wed, 08 Jan 2020 11:16:31 -0500</pubDate>
      
      <guid>https://www.pdcunplugged.org/activities/plantingtrees/</guid>
      <description>Original Author/link Described by Yifat Ben-David Kolikant (Kolinkat2001). Two introduction questions presented by Steven Bogaerts as part of his &amp;ldquo;real-life analogies&amp;rdquo; (Bogaerts2014, Bogaerts2017).
No public description avaialable. See Details section for more information.
 Details Start with some generals questions from Steven Bogaerts:
 &amp;ldquo;If I can shovel my driveway in 1 hour, how long would you expect it to take if someone equally capable were to help me?&amp;rdquo;
  &amp;ldquo;If one person can dig a hole with a shovel in 100 seconds, how long will it take for 10 people to dig that hole?</description>
    </item>
    
    <item>
      <title>ArrayAddition</title>
      <link>https://www.pdcunplugged.org/activities/arrayaddition/</link>
      <pubDate>Tue, 07 Jan 2020 15:13:49 -0500</pubDate>
      
      <guid>https://www.pdcunplugged.org/activities/arrayaddition/</guid>
      <description>Original Author/link Originally described by Robert Chesebrough and Ivan Turner; the authors cite the 2nd chapter of James Reinders&amp;rsquo; book (see citations) as inspiration for this example.
No link to indepdendent description available. Please see Details section for more information.
 Details Students sitting at desks represent &amp;ldquo;threads&amp;rdquo; on individual cores. Each student has a piece of paper on their desk representing local memory. Prior to the activity, the instructor writes an array on the board, filled with random values (limit 1 through 10 for ease of addition), with indices written underneath.</description>
    </item>
    
    <item>
      <title>ConcertTickets</title>
      <link>https://www.pdcunplugged.org/activities/concerttickets/</link>
      <pubDate>Fri, 06 Dec 2019 17:54:13 -0500</pubDate>
      
      <guid>https://www.pdcunplugged.org/activities/concerttickets/</guid>
      <description>Original Author/link Originally described by Yifat Ben-David Kolikant (Kolinkat2001). Modified for a CS1 audience by Gary Lewandowski, Dennis Bouvier, Robert McCartney, Kate Sanders, and Beth Simon in 2007 (Lewandowski2007, Lewandowski2010)
No on-line resources available. See details for description.
 Details CS1 Use-Case The following scenario is presented to students entering CS1 on their first day (Lewandowski2010):
 Suppose a Ticket Sale Company sells concert tickets in the following way: When a customer calls and asks for a n seats, the seller (1) finds the n best available seats; (2) marks those n seats as unavailable; and (3) deals with customer payment options and either e-mails ticket receipt or sends tickets to the Will Call Box Office (lets customer pick up tickets day of show).</description>
    </item>
    
    <item>
      <title>SweetenJuice</title>
      <link>https://www.pdcunplugged.org/activities/sweetenjuice/</link>
      <pubDate>Thu, 07 Nov 2019 11:07:01 -0500</pubDate>
      
      <guid>https://www.pdcunplugged.org/activities/sweetenjuice/</guid>
      <description>Original Author/link Originally described by Mordechai Ben-Ari and Yifat Ben-David Kolikant (Ben-Ari1999)
No web-link to independent description available. See paper (Ben-Ari1999) for additional details.
 Details The paper uses dramatizations to help students understand algorithmic execution. The paper only describes one such lesson, which is used to introduce the concept of mutual exclusion. The following is a rough summary of the exercise in (Ben-Ari1999):
Two students volunteer to be robots. A drinking glass is placed at a visible point in the classroom, purporting to contain &amp;ldquo;juice&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>JigsawPuzzle</title>
      <link>https://www.pdcunplugged.org/activities/jigsawpuzzle/</link>
      <pubDate>Mon, 04 Nov 2019 13:12:43 -0500</pubDate>
      
      <guid>https://www.pdcunplugged.org/activities/jigsawpuzzle/</guid>
      <description>Original Author/link Oklahoma Supercomputing Center for Educaton and Research (OSCER)
&amp;ldquo;Supercomputing in Plain English&amp;rdquo; - Overview, Slides 45-52.
 Available in: PPT and PDF Also described in (Neeman2006)   Variations It is theoretically possible to &amp;ldquo;act out&amp;rdquo; the analogy by using an actual puzzle. However, the puzzle needs to be small enough to enable students to complete the puzzle in a reasonable amount of time. This variation is described in (Neeman2006):</description>
    </item>
    
    <item>
      <title>CandySorting</title>
      <link>https://www.pdcunplugged.org/activities/candysorting/</link>
      <pubDate>Fri, 01 Nov 2019 14:23:28 -0400</pubDate>
      
      <guid>https://www.pdcunplugged.org/activities/candysorting/</guid>
      <description>Original Author/link iPDC Modules
 Available in Word and PDF   CS2013 Knowledge Unit Coverage Parallel Decomposition (Core Tier 1, Core Tier 2) 1. Core Tier 1: Explain why synchronization is necessary in a specific parallel program. [Usage]
2. Core Tier 1: Identify opportunities to partition a serial program into independent parallel modules. [Familiarity]
4. Core Tier 2: Parallelize an algorithm by applying task-based decomposition. [Usage]
Parallel Performance (Elective) 1.</description>
    </item>
    
    <item>
      <title>CardSorting</title>
      <link>https://www.pdcunplugged.org/activities/cardsorting/</link>
      <pubDate>Fri, 01 Nov 2019 12:39:05 -0400</pubDate>
      
      <guid>https://www.pdcunplugged.org/activities/cardsorting/</guid>
      <description>Original Author/link Originally described by Gregory F. Bachelis, David A. James, Bruce R. Maxim and Quentin F. Stout (Bachelis1994). Also alluded to by Garcia and (Moore2000).
Variation using a deck of playing cards by (Bogaerts2014 and Ghafoor2019):
iPDC Modules
 Available in Word and PDF  Similiar Exercises: Sorting: oddEvenTranspositionSort, ParallelRadixSort, PipelineSort, sortingNetwork
Other activities by authors (Bachelis1994): ParallelAddition, FindSmallestCard, SieveOfErastothenes, OddEvenTranspositionSort, PipelineSort
(Moore2000): SieveOfErastothenes, OddEvenTranspositionSort, MatrixAddition
(Ghafoor2019): ArraysInParallel, CandySorting, FindYoungestStudentInClass, PBJinParalell,</description>
    </item>
    
  </channel>
</rss>